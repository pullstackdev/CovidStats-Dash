#pragma checksum "C:\Users\Guest_F\Desktop\studies\udemy\fç-aspnetcore+signalr\Covid19Chart.API\Covid19Chart.WEB\Views\Home\Covid19Show.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f13fe1563ae72ebb2396c3ff60f5a68856d0ae82"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Covid19Show), @"mvc.1.0.view", @"/Views/Home/Covid19Show.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f13fe1563ae72ebb2396c3ff60f5a68856d0ae82", @"/Views/Home/Covid19Show.cshtml")]
    public class Views_Home_Covid19Show : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/microsoft/signalr/dist/browser/signalr.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<div id=\"curve_chart\" style=\"width: 1450px; height: 600px\"></div>\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f13fe1563ae72ebb2396c3ff60f5a68856d0ae823099", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script type=""text/javascript"" src=""https://www.gstatic.com/charts/loader.js""></script>


<script type=""text/javascript"">

    var covidChartList = new Array();
    covidChartList.push([""Date"", ""Munich"", ""Paris"", ""London"", ""Istanbul"", ""Tokyo""])

    //apiye burada bağlandı web
    var connection = new signalR.HubConnectionBuilder().withUrl(""https://localhost:44343/CovidHub"").build(); //dinleyeceğim api portu ve startupdaki hub name

    connection.start().then(() => { //start yaptık

        connection.invoke(""GetCovidList""); //serverdaki bu metodu tetikle

    }).catch((err) => { //hata alımında
        console.log(err);
    });

    connection.on(""ReceiveCovidList"", (covidList) => {
        //console.log(covidList);

        covidChartList = covidChartList.splice(0, 1); // her seferinde ilk başlık datası hariç temizle

        covidList.forEach((item) => { //db den gelen dataları liste pushladık
            covidChartList.push([item.covidDate, item.counts[0], item.counts[1], item.");
            WriteLiteral(@"counts[2], item.counts[3], item.counts[4]])
        });

        google.charts.load('current', { 'packages': ['corechart'] }); //her yeni data saveCovid ile geldiğinde yine bu metod çağıralacağı için biz burada chartları her seferinde yeniden oluşturalım
        google.charts.setOnLoadCallback(drawChart);

    }) //subscribe olsun mesajı alsın


    function drawChart() {
        var data = google.visualization.arrayToDataTable(
            covidChartList
            //[
            //['Year', 'Sales', 'Expenses'],
            //['2004', 1000, 400],
            //['2005', 1170, 460],
            //['2006', 660, 1120],
            //['2007', 1030, 540]
            //]
        );

        var options = {
            title: 'Covid19 Chart',
            curveType: 'none', //'function', farklı gösterim için none yaptık
            legend: { position: 'bottom' }
        };

        var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));

        chart.dra");
            WriteLiteral("w(data, options);\r\n    }\r\n\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
